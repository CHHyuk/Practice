"""
파라메트릭 서치(Parametric Search) : 최적화 문제를 결정 문제(Y/N)로 바꾸어 해결하는 기법
    예시 : 특정한 조건을 만족하는 가장 알맞은 값을 빠르게 찾는 최적화 문제
일반적으로 코딩 테스트에서 파라메트릭 서치 문제는 이진 탐색을 이용해서 해결 가능
"""

"""
떡볶이 떡 만들기
떡볶이 집의 떡의 길이는 일정하지 않다. 대신 한 봉지 안에 들어가는 떡의 총 길이는
절단기로 잘라 맞춰준다

절단기에 높이(H)를 지정하면 줄지어진 떡을 한 번에 절단한다. 높이가 H보다 긴 떡은
H 위의 부분이 잘릴 것이고, 낮은 떡은 잘리지 않습니다

예) 높이 19, 14, 10, 17cm인 떡이 나란히 있고 절단기 높이(H)를 15cm로 지정하면
자른 뒤 떡의 높이는 15, 14 10 15cm가 된다 잘린 떡은 4, 0, 0, 2cm이다 손님은 6cm만큼의 길이를 가져간다

손님이 왔을 때 요청한 총 길이가 M일때 적어도 M만큼의 떡을 얻기 위해 절단기에 설정할 수 있는 높이의 최댓값을 구하는 프로그램을 작성하라
"""

# 떡의 개수(N)와 요청한 떡의 길이(M)을 입력
n, m = list(map(int, input().split(' ')))
# 각 떡의 개별 높이 정보를 입력
array = list(map(int, input().split()))

# 이진 탐색을 위한 시작점과 끝점 설정
start = 0
end = max(array)

# 이진 탐색 수행(반복적)
result = 0
while(start <= end):
    total = 0
    mid = (start + end) // 2
    for x in array:
        # 잘랐을 때의 떡의 양 계산
        if x > mid:
            total += x - mid
    # 떡의 양이 부족한 경우 더 많이 자르기 (왼쪽 부분 탐색)
    if total < m:
        end = mid - 1
    # 떡의 양이 충분한 경우 덜 자르기 (오른쪽 부분 탐색)
    else:
        result = mid # 최대한 덜 잘랐을 때가 정답이므로 여기서 result에 기록
        start = mid + 1

print(result) # 15 길이에서 잘라야 4와 2가 남아 6이되므로 결과값은 15