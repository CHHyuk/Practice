# 그리디 알고리즘
# 거스름돈 문제
"""
당신은 음식점의 계산을 도와주는 점원
카운터에는 거스름돈으로 사용할 500 100 50 10원 동전이 무한히 존재
손님에게 거슬러 주어야 할 돈이 N원일때 거슬러 주어야 할 동전의 최소 개수
N은 항상 10의 배수
"""
"""
문제 해결 아이디어
    최적의 해를 빠르게 구하기 위해 가장 큰 화폐단위부터 돈을 거슬러 준다
    N원을 거슬러 줘야 할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러 준다
        이후 100원, 50원, 10원짜리 동전을 차례대로 거슬러 줄 수 있을 만큼 거슬러 준다
"""
"""
정당성 분석
    가장 큰 화폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유는 무엇일까
        가지고 있는 동전(500, 100, 50, 10원)중 큰 단위가 항상 작은 단위의 배수이므로
        작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문
            예외 예시) 800원을 거슬러 줘야 할 때 500원 400원 100원이 있다면?
    그리디 알고리즘 문제는 이처럼 문제 풀이를 위한 최소한의 아이디어를 떠올리고 이것이 정당한지 검토할 수 있어야 함
    
"""
N = 1260
count = 0
    
# 큰 단위의 화폐부터 차례대로 확인
array = [500,100,50,10]
    
for coin in array:
    count += N // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 count
    N %= coin

print(count)

